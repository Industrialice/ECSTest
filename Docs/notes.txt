Benchmark2:
  PC: 6.5kk (999.65ms vs. 0.35ms) and 203k (240ms vs. 760ms)
  AMD Geode: 92k (988ms vs. 11ms) and 4k (235ms vs. 765ms)
  
TODO:
+Environment argument is optional and can appear at any position
+Remove DIRECT_ACCEPT_COMPONENTS
+Remove INDIRECT_ACCEPT_COMPONENTS
+Don't store addresses of non-data arguments
+Warn for empty components
+RequiredComponent can accept arbitrary number of arguments
+SubtractiveComponent can accept arbitrary number of arguments
+Implement RequiredComponentAny
Implement component groups for RequiredComponentAny
+Implement OptionalComponent
Implement solution for shared components

Support arbitrary sized components? (can be used, for example, as raw data holders)

Shaders global uniforms:

matrix4x3: _ModelMatrix
matrix4x3: _ViewMatrix
matrix4x4: _ProjectionMatrix
matrix4x4: _ViewProjectionMatrix
vec3: _CameraPosition
vec2: _Time (total time; time delta)

Common vertex attributes:

{"Position", R32G32B32_Float or R16G16B16_Int} 
{"UV0".."UV7", R32G32_Float or R16G16_Float}
{"Normal", R32G32B32_Float or R32G32_Float}
{"Binormal", R32G32B32_Float or R32G32_Float}
{"Color", R8G8B8 or R8G8B8A8}

Every target declares what vertex attributes it supports, the redundant attributes
get stripped from the source meshes.

Each texture source is stored in a lossless format like PNG. It has following attributes:
Type: Default, Normal
Color space: sRGB, Linear
Wrap mode: WrapModet
Filter mode: FilterModet
Anisotropy level: 2^(0..4)
Max size: 2^(0..14)
Generate mips: true, false
Compression: None, Low Quality, Normal Quality, High Quality

There are conversion rules defined for each target.